{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ofir\\\\Documents\\\\shape-game-interview\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { useDebounce } from 'use-debounce';\nimport './App.css';\nimport { randomIntFromInterval } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameState = {\n  Loading: 'Loading',\n  // Ready: 'Ready',\n  Started: 'Started',\n  GameOver: 'GameOver'\n};\nconst ShapeSide = {\n  Left: 'left',\n  Right: 'right'\n};\nconst LevelStateType = {\n  Error1: {\n    state: 'Mistake',\n    message: 'Too Soon',\n    messageInfo: 'User taps any key in the waiting state'\n  },\n  Error2: {\n    state: 'Mistake',\n    message: 'Wrong Key',\n    messageInfo: 'User taps an incorrect key in the indicator showing state'\n  },\n  Error3: {\n    state: 'Mistake',\n    message: 'Too Late',\n    messageInfo: 'The indicator disappears before the user types any key'\n  },\n  Success: {\n    state: 'Success'\n  }\n};\nexport default function App() {\n  _s();\n  const [name, setName] = useState('');\n  const [gameState, setGameState] = useState('');\n  const [shapeSide, setShapeSide] = useState();\n  const [levelInfo, setLevelInfo] = useState({});\n  const [level, setLevel] = useState(0);\n  const [id, setId] = useState();\n  const [userAnswer, setUserAnswer] = useState();\n  const timeoutCallback = () => {\n    if (levelInfo.state === LevelStateType.Error1.state) {\n      return setGameState(GameState.GameOver);\n    }\n    if (!userAnswer && level) {\n      setLevelInfo(LevelStateType.Error3);\n      setGameState(GameState.GameOver);\n      return;\n    }\n    // Change image side \n    const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n    // setUserAnswer('')\n    setShapeSide(screenSide);\n    setLevel(prev => prev + 1);\n    setId(undefined);\n  };\n  useEffect(() => {\n    if (gameState === GameState.Loading) {\n      if (userAnswer) {\n        setLevelInfo(LevelStateType.Error1);\n        setGameState(GameState.GameOver);\n      }\n      if (!id) {\n        const LoadingTime = randomIntFromInterval(2000, 5000);\n        const id = setTimeout(() => {\n          setGameState(GameState.Started);\n          setId(undefined);\n        }, LoadingTime);\n        setId(id);\n      }\n    } else if (gameState === GameState.Started) {\n      if (!id) {\n        const id = setTimeout(timeoutCallback, 3000);\n        setId(id);\n      }\n      if (userAnswer && shapeSide) {\n        if (userAnswer === 'a' && shapeSide === ShapeSide.Left || userAnswer === 'l' && shapeSide === ShapeSide.Right) {\n          setLevelInfo(LevelStateType.Success);\n        } else {\n          setLevelInfo(LevelStateType.Error2);\n          // setGameState(GameState.GameOver)\n        }\n      }\n    } else if (gameState === GameState.GameOver) {\n      clearTimeout(id);\n    }\n  }, [gameState, id, userAnswer, shapeSide, level, timeoutCallback]);\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n  const onRestartClick = () => {\n    setGameState(GameState.Loading);\n    initWindowListener();\n  };\n  const initWindowListener = () => {\n    window.addEventListener('keypress', e => {\n      if (!userAnswer) {\n        setUserAnswer(e.key.toLowerCase());\n      }\n    });\n  };\n  let answerClass = '';\n  if (levelInfo.state === LevelStateType.Success.state) answerClass = 'hit';\n  if (levelInfo.state === LevelStateType.Error1.state) answerClass = 'fail';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shape-Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your name\",\n        value: name,\n        onChange: onChangeName,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Start Game!\",\n        onClick: onRestartClick,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), gameState === GameState.Loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), gameState === GameState.Started && shapeSide && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${shapeSide}-image ${answerClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/gift.png\",\n          className: \"image\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), gameState === GameState.GameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over :/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: levelInfo.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/game-over1.png\",\n        className: \"game-over\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"EfeO6b43oZuROAiygGapNjYBiyY=\");\n_c = App;\n;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","randomIntFromInterval","GameState","Loading","Started","GameOver","ShapeSide","Left","Right","LevelStateType","Error1","state","message","messageInfo","Error2","Error3","Success","App","name","setName","gameState","setGameState","shapeSide","setShapeSide","levelInfo","setLevelInfo","level","setLevel","id","setId","userAnswer","setUserAnswer","timeoutCallback","screenSide","Math","random","prev","undefined","LoadingTime","setTimeout","clearTimeout","onChangeName","event","target","value","onRestartClick","initWindowListener","window","addEventListener","e","key","toLowerCase","answerClass","includes"],"sources":["C:/Users/Ofir/Documents/shape-game-interview/src/App.tsx"],"sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\nimport classNames from \"classnames\";\n// import { useDebounce } from 'use-debounce';\nimport './App.css';\nimport { randomIntFromInterval } from './utils';\n\nconst GameState = {\n    Loading: 'Loading',\n    // Ready: 'Ready',\n    Started: 'Started',\n    GameOver: 'GameOver',\n}\nconst ShapeSide = {\n    Left: 'left',\n    Right: 'right',\n}\nconst LevelStateType = {\n    Error1: {\n        state: 'Mistake',\n        message: 'Too Soon',\n        messageInfo: 'User taps any key in the waiting state'\n    },\n    Error2: {\n        state: 'Mistake',\n        message: 'Wrong Key',\n        messageInfo: 'User taps an incorrect key in the indicator showing state'\n    },\n    Error3: {\n        state: 'Mistake',\n        message: 'Too Late',\n        messageInfo: 'The indicator disappears before the user types any key'\n    },\n    Success: {\n        state: 'Success'\n    }\n}\nexport default function App() {\n    const [name, setName] = useState<string>('');\n    const [gameState, setGameState] = useState<string>('');\n    const [shapeSide, setShapeSide] = useState<string>();\n    const [levelInfo, setLevelInfo] = useState<any>({})\n    const [level, setLevel] = useState<number>(0);\n    const [id, setId] = useState<NodeJS.Timer>();\n    const [userAnswer, setUserAnswer] = useState<string>();\n\n    const timeoutCallback = () => {\n        if (levelInfo.state===LevelStateType.Error1.state) {\n            return setGameState(GameState.GameOver)\n        }\n        if (!userAnswer && level) {\n            setLevelInfo(LevelStateType.Error3)\n            setGameState(GameState.GameOver)\n            return\n        }\n        // Change image side \n        const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n        // setUserAnswer('')\n        setShapeSide(screenSide)\n        setLevel(prev => prev + 1)\n        setId(undefined)\n    }\n\n    useEffect(() => {\n        if (gameState === GameState.Loading) {\n            if (userAnswer) {\n                setLevelInfo(LevelStateType.Error1)\n                setGameState(GameState.GameOver)\n            }\n            if (!id) {\n                const LoadingTime = randomIntFromInterval(2000, 5000)\n                const id = setTimeout(() => {\n                    setGameState(GameState.Started)\n                    setId(undefined)\n                }, LoadingTime)\n                setId(id)\n            }\n        } else if (gameState === GameState.Started) {\n            if (!id) {\n                const id = setTimeout(timeoutCallback, 3000)\n                setId(id)\n            }\n            if (userAnswer && shapeSide) {\n                if ((userAnswer === 'a' && shapeSide === ShapeSide.Left)\n                    || (userAnswer === 'l' && shapeSide === ShapeSide.Right)) {\n                    setLevelInfo(LevelStateType.Success)\n                } else {\n                    setLevelInfo(LevelStateType.Error2)\n                    // setGameState(GameState.GameOver)\n                }\n            }\n        } else if (gameState === GameState.GameOver) {\n            clearTimeout(id)\n        }\n    }, [gameState, id, userAnswer, shapeSide, level, timeoutCallback])\n\n    const onChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const onRestartClick = () => {\n        setGameState(GameState.Loading)\n        initWindowListener()\n    }\n\n    const initWindowListener = () => {\n        window.addEventListener('keypress', e => {\n            if (!userAnswer) {\n                setUserAnswer(e.key.toLowerCase())\n            }\n        });\n    }\n\n    let answerClass = ''\n    if (levelInfo.state===LevelStateType.Success.state) answerClass='hit'\n    if (levelInfo.state===LevelStateType.Error1.state) answerClass='fail'\n\n    return (\n        <div className=\"App\">\n            {/* Header */}\n            <h1>Shape-Game</h1>\n\n            {/* Details */}\n            <div>\n                <input type=\"text\" placeholder='Your name' value={name}\n                    onChange={onChangeName}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)} />\n                <input type=\"button\" value=\"Start Game!\"\n                    onClick={onRestartClick}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)} />\n            </div>\n\n            {/* Image Viewer */}\n            {gameState === GameState.Loading &&\n                <div>Loading...</div>\n            }\n            {gameState === GameState.Started && shapeSide &&\n                <div>\n                    <div>Level:<span>{level}</span></div>\n                    <div className={`${shapeSide}-image ${answerClass}`}>\n                        <img src=\"/gift.png\" className=\"image\" alt=\"\" />\n                    </div>\n                </div>\n            }\n            {gameState === GameState.GameOver &&\n                <div>\n                    <h2>Game Over :/</h2>\n                    <h3>{levelInfo.message}</h3>\n                    <h4>Level:<span>{level}</span></h4>\n                    <img src=\"/game-over1.png\" className=\"game-over\" alt=\"\" />\n                </div>\n            }\n\n        </div>\n    )\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}