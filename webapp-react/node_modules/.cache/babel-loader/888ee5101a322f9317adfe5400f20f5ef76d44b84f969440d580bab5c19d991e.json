{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ofir\\\\Documents\\\\shape-game-interview\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, CardActions, CardContent, CardMedia, Modal, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { GameState, LevelStateType, ShapeSide } from './utils/constants';\nimport { randomIntFromInterval } from './utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [name, setName] = useState('');\n  const [isNameError, setIsNameError] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [gameState, setGameState] = useState('');\n  const [shapeSide, setShapeSide] = useState();\n  const [levelInfo, setLevelInfo] = useState({});\n  const [userAnswer, setUserAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [id, setId] = useState();\n  const userAnswerRef = useRef(userAnswer);\n  const levelRef = useRef(level);\n  const levelInfoRef = useRef(levelInfo);\n  useEffect(() => {\n    levelRef.current = level;\n    userAnswerRef.current = userAnswer;\n    levelInfoRef.current = levelInfo;\n  }, [level, userAnswer, levelInfo]);\n  useEffect(() => {\n    const callback = () => {\n      if (levelInfoRef.current.state === LevelStateType.Success.state || levelRef.current === 0) {\n        // Change image side \n        const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n        setShapeSide(screenSide);\n        setUserAnswer('');\n        setLevel(prev => prev + 1);\n        setLevelInfo({});\n      } else {\n        if (!userAnswerRef.current && levelRef.current) {\n          // Too Late\n          setLevelInfo(LevelStateType.Error3);\n          setGameState(GameState.GameOver);\n        } else {\n          // Wrong Key\n          setGameState(GameState.GameOver);\n        }\n      }\n    };\n    if (gameState === GameState.Loading) {\n      if (userAnswer) {\n        setLevelInfo(LevelStateType.Error1);\n        setGameState(GameState.GameOver);\n      }\n      if (!id) {\n        const LoadingTime = randomIntFromInterval(2000, 5000);\n        const id = setTimeout(() => {\n          setGameState(GameState.Started);\n          setId(undefined);\n        }, LoadingTime);\n        setId(id);\n      }\n    } else if (gameState === GameState.Started) {\n      if (!id) {\n        const id = setInterval(callback, 1000);\n        setId(id);\n      }\n      if (userAnswer && shapeSide) {\n        if (userAnswer === 'a' && shapeSide === ShapeSide.Left || userAnswer === 'l' && shapeSide === ShapeSide.Right) {\n          setLevelInfo(LevelStateType.Success);\n        } else {\n          setLevelInfo(LevelStateType.Error2);\n        }\n      }\n    } else if (gameState === GameState.GameOver) {\n      if (id) {\n        clearTimeout(id);\n        setId(undefined);\n        setIsModalOpen(true);\n        fetch;\n      }\n    }\n  }, [gameState, id, userAnswer, shapeSide, level, levelInfo.state]);\n  const onChangeName = event => {\n    setName(event.target.value);\n    setIsNameError(!event.target.value);\n  };\n  const onRestartClick = () => {\n    if (!name) {\n      setIsNameError(true);\n      return;\n    }\n    setGameState(GameState.Loading);\n    setShapeSide('');\n    setLevelInfo({});\n    setUserAnswer('');\n    setLevel(0);\n    setId(undefined);\n    initWindowListener();\n  };\n  const initWindowListener = () => {\n    document.removeEventListener('keypress', () => {});\n    document.addEventListener('keypress', e => {\n      setUserAnswer(_ => e.key.toLowerCase());\n    });\n  };\n  let answerClass = '';\n  if (levelInfo.state === LevelStateType.Success.state) answerClass = 'hit';\n  if (levelInfo.state === LevelStateType.Error1.state) answerClass = 'fail';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shape-Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Name\",\n        variant: \"outlined\",\n        onChange: onChangeName,\n        required: true,\n        error: isNameError,\n        value: name,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: \"start-game-button\",\n        onClick: onRestartClick,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState),\n        children: \"Start Game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), gameState === GameState.Loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this), gameState === GameState.Started && shapeSide && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${shapeSide}-image ${answerClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/gift.png\",\n          className: \"image\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxStyle,\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          sx: {\n            height: 190\n          },\n          image: \"/game-over.png\",\n          title: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            color: \"text.primary\",\n            children: levelInfo.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            color: \"text.secondary\",\n            children: [\"Level: \", level, \" (\", name, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"Records Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"AWFUDER2rwzW9zUA2M752MEtAnU=\");\n_c = App;\n;\nconst boxStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","Button","CardActions","CardContent","CardMedia","Modal","TextField","Typography","React","useEffect","useRef","useState","GameState","LevelStateType","ShapeSide","randomIntFromInterval","App","name","setName","isNameError","setIsNameError","isModalOpen","setIsModalOpen","gameState","setGameState","shapeSide","setShapeSide","levelInfo","setLevelInfo","userAnswer","setUserAnswer","level","setLevel","id","setId","userAnswerRef","levelRef","levelInfoRef","current","callback","state","Success","screenSide","Math","random","Right","Left","prev","Error3","GameOver","Loading","Error1","LoadingTime","setTimeout","Started","undefined","setInterval","Error2","clearTimeout","fetch","onChangeName","event","target","value","onRestartClick","initWindowListener","document","removeEventListener","addEventListener","e","_","key","toLowerCase","answerClass","includes","boxStyle","height","message","position","top","left","transform","width","bgcolor","border","boxShadow","p"],"sources":["C:/Users/Ofir/Documents/shape-game-interview/src/App.tsx"],"sourcesContent":["import { Box, Button, CardActions, CardContent, CardMedia, Modal, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { GameState, LevelStateType, ShapeSide } from './utils/constants';\nimport { randomIntFromInterval } from './utils/helpers';\n\n\nexport default function App() {\n    const [name, setName] = useState<string>('');\n    const [isNameError, setIsNameError] = useState<boolean>(false);\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n    const [gameState, setGameState] = useState<string>('');\n    const [shapeSide, setShapeSide] = useState<string>();\n    const [levelInfo, setLevelInfo] = useState<any>({})\n    const [userAnswer, setUserAnswer] = useState<string>('');\n    const [level, setLevel] = useState<number>(0);\n    const [id, setId] = useState<NodeJS.Timer>();\n\n    const userAnswerRef = useRef(userAnswer)\n    const levelRef = useRef(level)\n    const levelInfoRef = useRef(levelInfo)\n\n\n    useEffect(() => {\n        levelRef.current = level;\n        userAnswerRef.current = userAnswer\n        levelInfoRef.current = levelInfo\n    }, [level, userAnswer, levelInfo])\n\n    useEffect(() => {\n        const callback = () => {\n            if (levelInfoRef.current.state === LevelStateType.Success.state || levelRef.current === 0) {\n                // Change image side \n                const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n                setShapeSide(screenSide)\n                setUserAnswer('')\n                setLevel(prev => prev + 1)\n                setLevelInfo({})\n            } else {\n                if (!userAnswerRef.current && levelRef.current) {\n                    // Too Late\n                    setLevelInfo(LevelStateType.Error3)\n                    setGameState(GameState.GameOver)\n                } else {\n                    // Wrong Key\n                    setGameState(GameState.GameOver)\n                }\n            }\n        }\n\n        if (gameState === GameState.Loading) {\n            if (userAnswer) {\n                setLevelInfo(LevelStateType.Error1)\n                setGameState(GameState.GameOver)\n            }\n            if (!id) {\n                const LoadingTime = randomIntFromInterval(2000, 5000)\n                const id = setTimeout(() => {\n                    setGameState(GameState.Started)\n                    setId(undefined)\n                }, LoadingTime)\n                setId(id)\n            }\n        } else if (gameState === GameState.Started) {\n            if (!id) {\n                const id = setInterval(callback, 1000)\n                setId(id)\n            }\n            if (userAnswer && shapeSide) {\n                if ((userAnswer === 'a' && shapeSide === ShapeSide.Left)\n                    || (userAnswer === 'l' && shapeSide === ShapeSide.Right)) {\n                    setLevelInfo(LevelStateType.Success)\n                } else {\n                    setLevelInfo(LevelStateType.Error2)\n                }\n            }\n        } else if (gameState === GameState.GameOver) {\n            if (id) {\n                clearTimeout(id)\n                setId(undefined)\n                setIsModalOpen(true)\n                fetch\n            }\n        }\n    }, [gameState, id, userAnswer, shapeSide, level, levelInfo.state])\n\n    const onChangeName = (event: any) => {\n        setName(event.target.value)\n        setIsNameError(!event.target.value)\n    }\n\n    const onRestartClick = () => {\n        if (!name) {\n            setIsNameError(true)\n            return\n        }\n        setGameState(GameState.Loading)\n        setShapeSide('')\n        setLevelInfo({})\n        setUserAnswer('')\n        setLevel(0)\n        setId(undefined)\n        initWindowListener()\n    }\n\n    const initWindowListener = () => {\n        document.removeEventListener('keypress', () => { })\n        document.addEventListener('keypress', e => {\n            setUserAnswer(_ => e.key.toLowerCase())\n        });\n    }\n\n    let answerClass = ''\n    if (levelInfo.state === LevelStateType.Success.state) answerClass = 'hit'\n    if (levelInfo.state === LevelStateType.Error1.state) answerClass = 'fail'\n\n    return (\n        <div className=\"App\">\n            {/* Header */}\n            <h1>Shape-Game</h1>\n\n            {/* Details */}\n            <div>\n                <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\"\n                    onChange={onChangeName}\n                    required={true}\n                    error={isNameError}\n                    value={name}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)} />\n                <Button variant=\"contained\"\n                    className='start-game-button'\n                    onClick={onRestartClick}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)}>Start Game!</Button>\n            </div>\n\n            {/* Image Viewer */}\n            {gameState === GameState.Loading &&\n                <div>Loading...</div>\n            }\n            {gameState === GameState.Started && shapeSide &&\n                <div>\n                    <div>Level:<span>{level}</span></div>\n                    <div className={`${shapeSide}-image ${answerClass}`}>\n                        <img src=\"/gift.png\" className=\"image\" alt=\"\" />\n                    </div>\n                </div>\n            }\n\n            <Modal\n                open={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={boxStyle}>\n                    <CardMedia\n                        sx={{ height: 190 }}\n                        image=\"/game-over.png\"\n                        title=\"Record\"\n                    />\n\n                    <CardContent>\n                        <Typography variant=\"h3\" color=\"text.primary\">\n                            {levelInfo.message}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" color=\"text.secondary\">\n                            Level: {level} ({name})\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\">Records Page</Button>\n                    </CardActions>\n                </Box>\n\n            </Modal>\n        </div>\n    )\n};\n\nconst boxStyle = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}