{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ofir\\\\Documents\\\\shape-game-interview\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { useDebounce } from 'use-debounce';\nimport './App.css';\nimport { randomIntFromInterval } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameState = {\n  Loading: 'Loading',\n  Ready: 'Ready',\n  Started: 'Started'\n};\nconst ShapeSide = {\n  Left: 'left',\n  Right: 'right'\n};\nexport default function App() {\n  _s();\n  const [name, setName] = useState('');\n  const [gameState, setGameState] = useState();\n  const [shapeSide, setShapeSide] = useState();\n  const [userAnswer, setUserAnswer] = useState();\n  const [isGameOver, setIsGameOver] = useState();\n  const [levelState, setLevelState] = useState;\n  // const [levelInfo, setLevelInfo] = useReducer({})\n  const [level, setLevel] = useState(0);\n  const [id, setId] = useState();\n  useEffect(() => {\n    if (gameState === GameState.Loading && !id) {\n      const LoadingTime = randomIntFromInterval(2000, 5000);\n      const id = setTimeout(() => {\n        setGameState(GameState.Ready);\n        setId(undefined);\n      }, LoadingTime);\n      setId(id);\n    } else if (gameState === GameState.Ready) {\n      setTimeout(() => {\n        // Change Game state\n        setGameState(GameState.Started);\n        setId(undefined);\n        const id = setInterval(() => {\n          // Change image side\n          const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n          console.log(screenSide);\n          setUserAnswer('');\n          setShapeSide(screenSide);\n          setLevel(prev => prev + 1);\n        }, 1000);\n        setId(id);\n        window.addEventListener('keypress', e => {\n          if (!userAnswer) setUserAnswer(e.key.toLowerCase());\n        });\n      }, 1000);\n    } else if (gameState === GameState.Started) {\n      if (userAnswer && shapeSide) {\n        if (userAnswer === 'a' && shapeSide === ShapeSide.Left || userAnswer === 'l' && shapeSide === ShapeSide.Right) {\n          // setIsLevelSuccess(true)\n        } else {\n          // setIsLevelSuccess(false)\n        }\n        // if (userAnswer === 'a' && shapeSide === ShapeSide.Left) setIsLevelSuccess(true) = 'hit';\n        // else if (userAnswer === 'l' && shapeSide === ShapeSide.Right) setIsLevelSuccess(true) = 'hit'\n        // else answerClass = 'fail'\n      }\n      // if (!isLevelSuccess) {\n      //     // Game Over\n      // }\n    }\n  }, [gameState, id, userAnswer]);\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n  const onRestartClick = () => {\n    setGameState(GameState.Loading);\n  };\n  let answerClass = '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shape-Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your name\",\n        value: name,\n        onChange: onChangeName,\n        disabled: !!gameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Start Game!\",\n        onClick: onRestartClick,\n        disabled: !!gameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), gameState === GameState.Loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), gameState === GameState.Ready && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Ready!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), gameState === GameState.Started && shapeSide && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${shapeSide}-image ${answerClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/gift.png\",\n          className: \"image\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"fsjO0k+G/nlXifv/+aiqtv6xbXA=\");\n_c = App;\n;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","randomIntFromInterval","GameState","Loading","Ready","Started","ShapeSide","Left","Right","App","name","setName","gameState","setGameState","shapeSide","setShapeSide","userAnswer","setUserAnswer","isGameOver","setIsGameOver","levelState","setLevelState","level","setLevel","id","setId","LoadingTime","setTimeout","undefined","setInterval","screenSide","Math","random","console","log","prev","window","addEventListener","e","key","toLowerCase","onChangeName","event","target","value","onRestartClick","answerClass"],"sources":["C:/Users/Ofir/Documents/shape-game-interview/src/App.tsx"],"sourcesContent":["import React, { useEffect, useReducer, useState } from 'react';\nimport classNames from \"classnames\";\n// import { useDebounce } from 'use-debounce';\nimport './App.css';\nimport { randomIntFromInterval } from './utils';\n\nconst GameState = {\n    Loading: 'Loading',\n    Ready: 'Ready',\n    Started: 'Started'\n}\nconst ShapeSide = {\n    Left: 'left',\n    Right: 'right',\n}\nexport default function App() {\n    const [name, setName] = useState<string>('');\n    const [gameState, setGameState] = useState<string>();\n    const [shapeSide, setShapeSide] = useState<string>();\n    const [userAnswer, setUserAnswer] = useState<string>();\n    const [isGameOver, setIsGameOver] = useState<boolean>();\n    const [levelState, setLevelState] = useState\n    // const [levelInfo, setLevelInfo] = useReducer({})\n    const [level, setLevel] = useState<number>(0);\n    const [id, setId] = useState<NodeJS.Timer>();\n\n    useEffect(() => {\n        if (gameState === GameState.Loading && !id) {\n            const LoadingTime = randomIntFromInterval(2000,5000)\n            const id = setTimeout(() => {\n                setGameState(GameState.Ready)\n                setId(undefined)\n            }, LoadingTime)\n            setId(id)\n        } else if (gameState === GameState.Ready) {\n            setTimeout(() => {\n                // Change Game state\n                setGameState(GameState.Started)\n                setId(undefined)\n                const id = setInterval(() => {\n                    // Change image side\n                    const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n                    console.log(screenSide)\n                    setUserAnswer('')\n                    setShapeSide(screenSide)\n                    setLevel(prev => prev+1)\n                }, 1000)\n                setId(id)\n                window.addEventListener('keypress', e => {\n                    if (!userAnswer) setUserAnswer(e.key.toLowerCase())\n                });\n            }, 1000)\n        } else if (gameState === GameState.Started) {\n            if (userAnswer && shapeSide) {\n                if ((userAnswer === 'a' && shapeSide === ShapeSide.Left)\n                || (userAnswer === 'l' && shapeSide === ShapeSide.Right)) {\n                    // setIsLevelSuccess(true)\n                } else {\n                    // setIsLevelSuccess(false)\n                }\n                // if (userAnswer === 'a' && shapeSide === ShapeSide.Left) setIsLevelSuccess(true) = 'hit';\n                // else if (userAnswer === 'l' && shapeSide === ShapeSide.Right) setIsLevelSuccess(true) = 'hit'\n                // else answerClass = 'fail'\n            }\n            // if (!isLevelSuccess) {\n            //     // Game Over\n            // }\n        }\n    }, [gameState, id, userAnswer])\n\n    const onChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const onRestartClick = () => {\n        setGameState(GameState.Loading)\n    }\n\n    let answerClass = '';\n\n    return (\n        <div className=\"App\">\n            {/* Header */}\n            <h1>Shape-Game</h1>\n\n            {/* Details */}\n            <div>\n                <input type=\"text\" placeholder='Your name' value={name} onChange={onChangeName} disabled={!!gameState} />\n                <input type=\"button\" value=\"Start Game!\" onClick={onRestartClick} disabled={!!gameState} />\n            </div>\n\n            {/* Image Viewer */}\n            {gameState === GameState.Loading &&\n                <div>Loading...</div>\n            }\n            {gameState === GameState.Ready &&\n                <div>Ready!</div>\n            }\n            {gameState === GameState.Started && shapeSide &&\n                <>\n                    <div>Level:<span>{level}</span></div>\n                    <div className={`${shapeSide}-image ${answerClass}`}>\n                        <img src=\"/gift.png\" className=\"image\" alt=\"\" />\n                    </div>\n                </>\n            }\n\n        </div>\n    )\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}