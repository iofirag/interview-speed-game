{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ofir\\\\Documents\\\\shape-game-interview\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameState = {\n  Loading: 'Loading',\n  // Ready: 'Ready',\n  Started: 'Started',\n  GameOver: 'GameOver'\n};\nconst ShapeSide = {\n  Left: 'left',\n  Right: 'right'\n};\nconst LevelStateType = {\n  Error1: {\n    state: 'Mistake',\n    message: 'Too Soon',\n    messageInfo: 'User taps any key in the waiting state'\n  },\n  Error2: {\n    state: 'Mistake',\n    message: 'Wrong Key',\n    messageInfo: 'User taps an incorrect key in the indicator showing state'\n  },\n  Error3: {\n    state: 'Mistake',\n    message: 'Too Late',\n    messageInfo: 'The indicator disappears before the user types any key'\n  },\n  Success: {\n    state: 'Success'\n  }\n};\nexport default function App() {\n  _s();\n  const [name, setName] = useState('');\n  const [gameState, setGameState] = useState('');\n  const [shapeSide, setShapeSide] = useState();\n  const [levelInfo, setLevelInfo] = useState({});\n  const [userAnswer, setUserAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [id, setId] = useState();\n  const userAnswerRef = useRef(userAnswer);\n  const levelRef = useRef(level);\n  const levelInfoRef = useRef(levelInfo);\n\n  // () => {\n  // if (level) {\n  //     if (!userAnswer && level) {\n  //         // Too Late\n  //         // setLevelInfo(LevelStateType.Error3)\n  //         // setGameState(GameState.GameOver)\n  //         // return\n  //     }\n  //     if (levelInfo.state && levelInfo.state!==LevelStateType.Success.state) {\n  //         // User taps an incorrect key in the indicator showing state\n  //         setGameState(GameState.GameOver)\n  //         return\n  //     }\n  // }\n  // if (level === 0 || levelInfo.state===LevelStateType.Success.state) {\n  //     // Change image side \n  //     const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n  //     setUserAnswer('')\n  //     setShapeSide(screenSide)\n  //     setId(undefined)\n  //     setLevel(prev => prev + 1)\n  // }\n  // )\n\n  useEffect(() => {\n    levelRef.current = level;\n    userAnswerRef.current = userAnswer;\n    levelInfoRef.current = levelInfo;\n  }, [level, userAnswer, levelInfo]);\n  useEffect(() => {\n    const callback = () => {\n      if (levelInfoRef.current.state === LevelStateType.Success.state || levelRef.current === 0) {\n        // Change image side \n        const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n        setShapeSide(screenSide);\n        // setId(undefined)\n        setUserAnswer(_ => '');\n        setLevel(prev => prev + 1);\n        setLevelInfo();\n      } else {\n        if (!userAnswerRef.current && levelRef.current) {\n          // Too Late\n          setLevelInfo(LevelStateType.Error3);\n          setGameState(GameState.GameOver);\n          // return\n        } else {\n          // Wrong Key\n          setGameState(GameState.GameOver);\n        }\n      }\n    };\n    if (gameState === GameState.Loading) {\n      if (userAnswer) {\n        setLevelInfo(LevelStateType.Error1);\n        setGameState(GameState.GameOver);\n      }\n      if (!id) {\n        const LoadingTime = 1000; //randomIntFromInterval(2000, 5000)\n        const id = setTimeout(() => {\n          setGameState(GameState.Started);\n          setId(undefined);\n        }, LoadingTime);\n        setId(id);\n      }\n    } else if (gameState === GameState.Started) {\n      if (!id) {\n        const id = setInterval(callback, 3000);\n        setId(id);\n      }\n      if (userAnswer && shapeSide) {\n        if (userAnswer === 'a' && shapeSide === ShapeSide.Left || userAnswer === 'l' && shapeSide === ShapeSide.Right) {\n          setLevelInfo(LevelStateType.Success);\n        } else {\n          setLevelInfo(LevelStateType.Error2);\n        }\n      }\n    } else if (gameState === GameState.GameOver) {\n      if (id) {\n        clearTimeout(id);\n        setId(undefined);\n      }\n    }\n  }, [gameState, id, userAnswer, shapeSide, level, levelInfo.state]);\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n  const onRestartClick = () => {\n    setGameState(GameState.Loading);\n    setShapeSide('');\n    setLevelInfo({});\n    setUserAnswer(_ => '');\n    setLevel(0);\n    setId(undefined);\n    initWindowListener();\n  };\n  const initWindowListener = () => {\n    document.removeEventListener('keypress', () => {});\n    document.addEventListener('keypress', e => {\n      // if (!userAnswer) {\n      setUserAnswer(_ => e.key.toLowerCase());\n      // }\n    });\n  };\n\n  let answerClass = '';\n  if (levelInfo.state === LevelStateType.Success.state) answerClass = 'hit';\n  if (levelInfo.state === LevelStateType.Error1.state) answerClass = 'fail';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shape-Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your name\",\n        value: name,\n        onChange: onChangeName,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Start Game!\",\n        onClick: onRestartClick,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), gameState === GameState.Loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this), gameState === GameState.Started && shapeSide && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${shapeSide}-image ${answerClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/gift.png\",\n          className: \"image\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this), gameState === GameState.GameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: levelInfo.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/game-over1.png\",\n        className: \"game-over\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"rQvI39G0E4zlC5QUll3nPv9Zo7c=\");\n_c = App;\n;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GameState","Loading","Started","GameOver","ShapeSide","Left","Right","LevelStateType","Error1","state","message","messageInfo","Error2","Error3","Success","App","name","setName","gameState","setGameState","shapeSide","setShapeSide","levelInfo","setLevelInfo","userAnswer","setUserAnswer","level","setLevel","id","setId","userAnswerRef","levelRef","levelInfoRef","current","callback","screenSide","Math","random","_","prev","LoadingTime","setTimeout","undefined","setInterval","clearTimeout","onChangeName","event","target","value","onRestartClick","initWindowListener","document","removeEventListener","addEventListener","e","key","toLowerCase","answerClass","includes"],"sources":["C:/Users/Ofir/Documents/shape-game-interview/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport './App.css';\nimport { randomIntFromInterval } from './utils';\n\nconst GameState = {\n    Loading: 'Loading',\n    // Ready: 'Ready',\n    Started: 'Started',\n    GameOver: 'GameOver',\n}\nconst ShapeSide = {\n    Left: 'left',\n    Right: 'right',\n}\nconst LevelStateType = {\n    Error1: {\n        state: 'Mistake',\n        message: 'Too Soon',\n        messageInfo: 'User taps any key in the waiting state'\n    },\n    Error2: {\n        state: 'Mistake',\n        message: 'Wrong Key',\n        messageInfo: 'User taps an incorrect key in the indicator showing state'\n    },\n    Error3: {\n        state: 'Mistake',\n        message: 'Too Late',\n        messageInfo: 'The indicator disappears before the user types any key'\n    },\n    Success: {\n        state: 'Success'\n    }\n}\nexport default function App() {\n    const [name, setName] = useState<string>('');\n    const [gameState, setGameState] = useState<string>('');\n    const [shapeSide, setShapeSide] = useState<string>();\n    const [levelInfo, setLevelInfo] = useState<any>({})\n    const [userAnswer, setUserAnswer] = useState<string>('');\n    const [level, setLevel] = useState<number>(0);\n    const [id, setId] = useState<NodeJS.Timer>();\n    const userAnswerRef = useRef(userAnswer)\n    const levelRef = useRef(level)\n    const levelInfoRef = useRef(levelInfo)\n\n    \n        \n        // () => {\n        // if (level) {\n        //     if (!userAnswer && level) {\n        //         // Too Late\n        //         // setLevelInfo(LevelStateType.Error3)\n        //         // setGameState(GameState.GameOver)\n        //         // return\n        //     }\n        //     if (levelInfo.state && levelInfo.state!==LevelStateType.Success.state) {\n        //         // User taps an incorrect key in the indicator showing state\n        //         setGameState(GameState.GameOver)\n        //         return\n        //     }\n        // }\n        // if (level === 0 || levelInfo.state===LevelStateType.Success.state) {\n        //     // Change image side \n        //     const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n        //     setUserAnswer('')\n        //     setShapeSide(screenSide)\n        //     setId(undefined)\n        //     setLevel(prev => prev + 1)\n        // }\n    // )\n\n    useEffect(() => {\n        levelRef.current = level;\n        userAnswerRef.current = userAnswer\n        levelInfoRef.current = levelInfo\n    }, [level, userAnswer, levelInfo])\n\n    useEffect(() => {\n        const callback = () => {\n            if (levelInfoRef.current.state === LevelStateType.Success.state || levelRef.current === 0) {\n                // Change image side \n                const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n                setShapeSide(screenSide)\n                // setId(undefined)\n                setUserAnswer(_ => '')\n                setLevel(prev => prev + 1)\n                setLevelInfo()\n            } else {\n                if (!userAnswerRef.current && levelRef.current) {\n                    // Too Late\n                    setLevelInfo(LevelStateType.Error3)\n                    setGameState(GameState.GameOver)\n                    // return\n                } else {\n                    // Wrong Key\n                    setGameState(GameState.GameOver)\n                }\n            }\n        }\n\n        if (gameState === GameState.Loading) {\n            if (userAnswer) {\n                setLevelInfo(LevelStateType.Error1)\n                setGameState(GameState.GameOver)\n            }\n            if (!id) {\n                const LoadingTime = 1000//randomIntFromInterval(2000, 5000)\n                const id = setTimeout(() => {\n                    setGameState(GameState.Started)\n                    setId(undefined)\n                }, LoadingTime)\n                setId(id)\n            }\n        } else if (gameState === GameState.Started) {\n            if (!id) {\n                const id = setInterval(callback, 3000)\n                setId(id)\n            }\n            if (userAnswer && shapeSide) {\n                if ((userAnswer === 'a' && shapeSide === ShapeSide.Left)\n                    || (userAnswer === 'l' && shapeSide === ShapeSide.Right)) {\n                    setLevelInfo(LevelStateType.Success)\n                } else {\n                    setLevelInfo(LevelStateType.Error2)\n                }\n            }\n        } else if (gameState === GameState.GameOver) {\n            if (id) {\n                clearTimeout(id)\n                setId(undefined)\n            }\n        }\n    }, [gameState, id, userAnswer, shapeSide, level, levelInfo.state])\n\n    const onChangeName = (event: any) => {\n        setName(event.target.value)\n    }\n\n    const onRestartClick = () => {\n        setGameState(GameState.Loading)\n        setShapeSide('')\n        setLevelInfo({})\n        setUserAnswer(_ => '')\n        setLevel(0)\n        setId(undefined)\n        initWindowListener()\n    }\n\n    const initWindowListener = () => {\n        document.removeEventListener('keypress', () => { })\n        document.addEventListener('keypress', e => {\n            // if (!userAnswer) {\n            setUserAnswer(_ => e.key.toLowerCase())\n            // }\n        });\n    }\n\n    let answerClass = ''\n    if (levelInfo.state === LevelStateType.Success.state) answerClass = 'hit'\n    if (levelInfo.state === LevelStateType.Error1.state) answerClass = 'fail'\n\n    return (\n        <div className=\"App\">\n            {/* Header */}\n            <h1>Shape-Game</h1>\n\n            {/* Details */}\n            <div>\n                <input type=\"text\" placeholder='Your name' value={name}\n                    onChange={onChangeName}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)} />\n                <input type=\"button\" value=\"Start Game!\"\n                    onClick={onRestartClick}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)} />\n            </div>\n\n            {/* Image Viewer */}\n            {gameState === GameState.Loading &&\n                <div>Loading...</div>\n            }\n            {gameState === GameState.Started && shapeSide &&\n                <div>\n                    <div>Level:<span>{level}</span></div>\n                    <div className={`${shapeSide}-image ${answerClass}`}>\n                        <img src=\"/gift.png\" className=\"image\" alt=\"\" />\n                    </div>\n                </div>\n            }\n            {gameState === GameState.GameOver &&\n                <div>\n                    <h2>Game Over :(</h2>\n                    <h3>{levelInfo.message}</h3>\n                    <h4>Level:<span>{level}</span></h4>\n                    <img src=\"/game-over1.png\" className=\"game-over\" alt=\"\" />\n                </div>\n            }\n\n        </div>\n    )\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}