{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ofir\\\\Documents\\\\shape-game-interview\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from '@mui/material';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { randomIntFromInterval } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameState = {\n  Loading: 'Loading',\n  // Ready: 'Ready',\n  Started: 'Started',\n  GameOver: 'GameOver'\n};\nconst ShapeSide = {\n  Left: 'left',\n  Right: 'right'\n};\nconst LevelStateType = {\n  Error1: {\n    state: 'Mistake',\n    message: 'Too Soon',\n    messageInfo: 'User taps any key in the waiting state'\n  },\n  Error2: {\n    state: 'Mistake',\n    message: 'Wrong Key',\n    messageInfo: 'User taps an incorrect key in the indicator showing state'\n  },\n  Error3: {\n    state: 'Mistake',\n    message: 'Too Late',\n    messageInfo: 'The indicator disappears before the user types any key'\n  },\n  Success: {\n    state: 'Success'\n  }\n};\nexport default function App() {\n  _s();\n  const [name, setName] = useState('');\n  const [nameMissing, setIsNameError] = useState(false);\n  const [gameState, setGameState] = useState('');\n  const [shapeSide, setShapeSide] = useState();\n  const [levelInfo, setLevelInfo] = useState({});\n  const [userAnswer, setUserAnswer] = useState('');\n  const [level, setLevel] = useState(0);\n  const [id, setId] = useState();\n  const userAnswerRef = useRef(userAnswer);\n  const levelRef = useRef(level);\n  const levelInfoRef = useRef(levelInfo);\n  useEffect(() => {\n    levelRef.current = level;\n    userAnswerRef.current = userAnswer;\n    levelInfoRef.current = levelInfo;\n  }, [level, userAnswer, levelInfo]);\n  useEffect(() => {\n    const callback = () => {\n      if (levelInfoRef.current.state === LevelStateType.Success.state || levelRef.current === 0) {\n        // Change image side \n        const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n        setShapeSide(screenSide);\n        setUserAnswer('');\n        setLevel(prev => prev + 1);\n        setLevelInfo({});\n      } else {\n        if (!userAnswerRef.current && levelRef.current) {\n          // Too Late\n          setLevelInfo(LevelStateType.Error3);\n          setGameState(GameState.GameOver);\n          // return\n        } else {\n          // Wrong Key\n          setGameState(GameState.GameOver);\n        }\n      }\n    };\n    if (gameState === GameState.Loading) {\n      if (userAnswer) {\n        setLevelInfo(LevelStateType.Error1);\n        setGameState(GameState.GameOver);\n      }\n      if (!id) {\n        const LoadingTime = randomIntFromInterval(2000, 5000);\n        const id = setTimeout(() => {\n          setGameState(GameState.Started);\n          setId(undefined);\n        }, LoadingTime);\n        setId(id);\n      }\n    } else if (gameState === GameState.Started) {\n      if (!id) {\n        const id = setInterval(callback, 3000);\n        setId(id);\n      }\n      if (userAnswer && shapeSide) {\n        if (userAnswer === 'a' && shapeSide === ShapeSide.Left || userAnswer === 'l' && shapeSide === ShapeSide.Right) {\n          setLevelInfo(LevelStateType.Success);\n        } else {\n          setLevelInfo(LevelStateType.Error2);\n        }\n      }\n    } else if (gameState === GameState.GameOver) {\n      if (id) {\n        clearTimeout(id);\n        setId(undefined);\n      }\n    }\n  }, [gameState, id, userAnswer, shapeSide, level, levelInfo.state]);\n  const onChangeName = event => {\n    setName(event.target.value);\n    setNameMissing(!event.target.value);\n  };\n  const onRestartClick = () => {\n    setGameState(GameState.Loading);\n    setShapeSide('');\n    setLevelInfo({});\n    setUserAnswer('');\n    setLevel(0);\n    setId(undefined);\n    initWindowListener();\n  };\n  const initWindowListener = () => {\n    document.removeEventListener('keypress', () => {});\n    document.addEventListener('keypress', e => {\n      setUserAnswer(_ => e.key.toLowerCase());\n    });\n  };\n  let answerClass = '';\n  if (levelInfo.state === LevelStateType.Success.state) answerClass = 'hit';\n  if (levelInfo.state === LevelStateType.Error1.state) answerClass = 'fail';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shape-Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Name\",\n        variant: \"outlined\",\n        onChange: onChangeName,\n        required: true,\n        error: nameMissing,\n        value: name,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: \"start-game-button\",\n        onClick: onRestartClick,\n        disabled: [GameState.Loading, GameState.Started].includes(gameState),\n        children: \"Start Game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), gameState === GameState.Loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this), gameState === GameState.Started && shapeSide && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${shapeSide}-image ${answerClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/gift.png\",\n          className: \"image\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this), gameState === GameState.GameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: levelInfo.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/game-over1.png\",\n        className: \"game-over\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"DXc2dcsMCLqsiD2sRlNdTGHu3ak=\");\n_c = App;\n;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","TextField","React","useEffect","useRef","useState","randomIntFromInterval","GameState","Loading","Started","GameOver","ShapeSide","Left","Right","LevelStateType","Error1","state","message","messageInfo","Error2","Error3","Success","App","name","setName","nameMissing","setIsNameError","gameState","setGameState","shapeSide","setShapeSide","levelInfo","setLevelInfo","userAnswer","setUserAnswer","level","setLevel","id","setId","userAnswerRef","levelRef","levelInfoRef","current","callback","screenSide","Math","random","prev","LoadingTime","setTimeout","undefined","setInterval","clearTimeout","onChangeName","event","target","value","setNameMissing","onRestartClick","initWindowListener","document","removeEventListener","addEventListener","e","_","key","toLowerCase","answerClass","includes"],"sources":["C:/Users/Ofir/Documents/shape-game-interview/src/App.tsx"],"sourcesContent":["import { Button, TextField } from '@mui/material';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport './App.css';\nimport { randomIntFromInterval } from './utils';\n\nconst GameState = {\n    Loading: 'Loading',\n    // Ready: 'Ready',\n    Started: 'Started',\n    GameOver: 'GameOver',\n}\nconst ShapeSide = {\n    Left: 'left',\n    Right: 'right',\n}\nconst LevelStateType = {\n    Error1: {\n        state: 'Mistake',\n        message: 'Too Soon',\n        messageInfo: 'User taps any key in the waiting state'\n    },\n    Error2: {\n        state: 'Mistake',\n        message: 'Wrong Key',\n        messageInfo: 'User taps an incorrect key in the indicator showing state'\n    },\n    Error3: {\n        state: 'Mistake',\n        message: 'Too Late',\n        messageInfo: 'The indicator disappears before the user types any key'\n    },\n    Success: {\n        state: 'Success'\n    }\n}\nexport default function App() {\n    const [name, setName] = useState<string>('');\n    const [nameMissing, setIsNameError] = useState<boolean>(false);\n    const [gameState, setGameState] = useState<string>('');\n    const [shapeSide, setShapeSide] = useState<string>();\n    const [levelInfo, setLevelInfo] = useState<any>({})\n    const [userAnswer, setUserAnswer] = useState<string>('');\n    const [level, setLevel] = useState<number>(0);\n    const [id, setId] = useState<NodeJS.Timer>();\n\n    const userAnswerRef = useRef(userAnswer)\n    const levelRef = useRef(level)\n    const levelInfoRef = useRef(levelInfo)\n\n\n    useEffect(() => {\n        levelRef.current = level;\n        userAnswerRef.current = userAnswer\n        levelInfoRef.current = levelInfo\n    }, [level, userAnswer, levelInfo])\n\n    useEffect(() => {\n        const callback = () => {\n            if (levelInfoRef.current.state === LevelStateType.Success.state || levelRef.current === 0) {\n                // Change image side \n                const screenSide = Math.random() > 0.5 ? ShapeSide.Right : ShapeSide.Left;\n                setShapeSide(screenSide)\n                setUserAnswer('')\n                setLevel(prev => prev + 1)\n                setLevelInfo({})\n            } else {\n                if (!userAnswerRef.current && levelRef.current) {\n                    // Too Late\n                    setLevelInfo(LevelStateType.Error3)\n                    setGameState(GameState.GameOver)\n                    // return\n                } else {\n                    // Wrong Key\n                    setGameState(GameState.GameOver)\n                }\n            }\n        }\n\n        if (gameState === GameState.Loading) {\n            if (userAnswer) {\n                setLevelInfo(LevelStateType.Error1)\n                setGameState(GameState.GameOver)\n            }\n            if (!id) {\n                const LoadingTime = randomIntFromInterval(2000, 5000)\n                const id = setTimeout(() => {\n                    setGameState(GameState.Started)\n                    setId(undefined)\n                }, LoadingTime)\n                setId(id)\n            }\n        } else if (gameState === GameState.Started) {\n            if (!id) {\n                const id = setInterval(callback, 3000)\n                setId(id)\n            }\n            if (userAnswer && shapeSide) {\n                if ((userAnswer === 'a' && shapeSide === ShapeSide.Left)\n                    || (userAnswer === 'l' && shapeSide === ShapeSide.Right)) {\n                    setLevelInfo(LevelStateType.Success)\n                } else {\n                    setLevelInfo(LevelStateType.Error2)\n                }\n            }\n        } else if (gameState === GameState.GameOver) {\n            if (id) {\n                clearTimeout(id)\n                setId(undefined)\n            }\n        }\n    }, [gameState, id, userAnswer, shapeSide, level, levelInfo.state])\n\n    const onChangeName = (event: any) => {\n        setName(event.target.value)\n        setNameMissing(!event.target.value)\n    }\n\n    const onRestartClick = () => {\n        setGameState(GameState.Loading)\n        setShapeSide('')\n        setLevelInfo({})\n        setUserAnswer('')\n        setLevel(0)\n        setId(undefined)\n        initWindowListener()\n    }\n\n    const initWindowListener = () => {\n        document.removeEventListener('keypress', () => { })\n        document.addEventListener('keypress', e => {\n            setUserAnswer(_ => e.key.toLowerCase())\n        });\n    }\n\n    let answerClass = ''\n    if (levelInfo.state === LevelStateType.Success.state) answerClass = 'hit'\n    if (levelInfo.state === LevelStateType.Error1.state) answerClass = 'fail'\n\n    return (\n        <div className=\"App\">\n            {/* Header */}\n            <h1>Shape-Game</h1>\n\n            {/* Details */}\n            <div>\n                <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\"\n                    onChange={onChangeName}\n                    required={true}\n                    error={nameMissing}\n                    value={name}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)} />\n                <Button variant=\"contained\"\n                    className='start-game-button'\n                    onClick={onRestartClick}\n                    disabled={[GameState.Loading, GameState.Started].includes(gameState)}>Start Game!</Button>\n            </div>\n\n            {/* Image Viewer */}\n            {gameState === GameState.Loading &&\n                <div>Loading...</div>\n            }\n            {gameState === GameState.Started && shapeSide &&\n                <div>\n                    <div>Level:<span>{level}</span></div>\n                    <div className={`${shapeSide}-image ${answerClass}`}>\n                        <img src=\"/gift.png\" className=\"image\" alt=\"\" />\n                    </div>\n                </div>\n            }\n            {gameState === GameState.GameOver &&\n                <div>\n                    <h2>Game Over :(</h2>\n                    <h3>{levelInfo.message}</h3>\n                    <h4>Level:<span>{level}</span></h4>\n                    <img src=\"/game-over1.png\" className=\"game-over\" alt=\"\" />\n                </div>\n            }\n\n        </div>\n    )\n};\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAOC,KAAK,IAAiBC,SAAS,EAAWC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChF,OAAO,WAAW;AAClB,SAASC,qBAAqB,QAAQ,SAAS;AAAC;AAEhD,MAAMC,SAAS,GAAG;EACdC,OAAO,EAAE,SAAS;EAClB;EACAC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMC,SAAS,GAAG;EACdC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;AACX,CAAC;AACD,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE;IACJC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE,UAAU;IACnBC,WAAW,EAAE;EACjB,CAAC;EACDC,MAAM,EAAE;IACJH,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE,WAAW;IACpBC,WAAW,EAAE;EACjB,CAAC;EACDE,MAAM,EAAE;IACJJ,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE,UAAU;IACnBC,WAAW,EAAE;EACjB,CAAC;EACDG,OAAO,EAAE;IACLL,KAAK,EAAE;EACX;AACJ,CAAC;AACD,eAAe,SAASM,GAAG,GAAG;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAS,EAAE,CAAC;EACtD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,EAAU;EACpD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAM,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAS,CAAC,CAAC;EAC7C,MAAM,CAACgC,EAAE,EAAEC,KAAK,CAAC,GAAGjC,QAAQ,EAAgB;EAE5C,MAAMkC,aAAa,GAAGnC,MAAM,CAAC6B,UAAU,CAAC;EACxC,MAAMO,QAAQ,GAAGpC,MAAM,CAAC+B,KAAK,CAAC;EAC9B,MAAMM,YAAY,GAAGrC,MAAM,CAAC2B,SAAS,CAAC;EAGtC5B,SAAS,CAAC,MAAM;IACZqC,QAAQ,CAACE,OAAO,GAAGP,KAAK;IACxBI,aAAa,CAACG,OAAO,GAAGT,UAAU;IAClCQ,YAAY,CAACC,OAAO,GAAGX,SAAS;EACpC,CAAC,EAAE,CAACI,KAAK,EAAEF,UAAU,EAAEF,SAAS,CAAC,CAAC;EAElC5B,SAAS,CAAC,MAAM;IACZ,MAAMwC,QAAQ,GAAG,MAAM;MACnB,IAAIF,YAAY,CAACC,OAAO,CAAC1B,KAAK,KAAKF,cAAc,CAACO,OAAO,CAACL,KAAK,IAAIwB,QAAQ,CAACE,OAAO,KAAK,CAAC,EAAE;QACvF;QACA,MAAME,UAAU,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,GAAGnC,SAAS,CAACE,KAAK,GAAGF,SAAS,CAACC,IAAI;QACzEkB,YAAY,CAACc,UAAU,CAAC;QACxBV,aAAa,CAAC,EAAE,CAAC;QACjBE,QAAQ,CAACW,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;QAC1Bf,YAAY,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,MAAM;QACH,IAAI,CAACO,aAAa,CAACG,OAAO,IAAIF,QAAQ,CAACE,OAAO,EAAE;UAC5C;UACAV,YAAY,CAAClB,cAAc,CAACM,MAAM,CAAC;UACnCQ,YAAY,CAACrB,SAAS,CAACG,QAAQ,CAAC;UAChC;QACJ,CAAC,MAAM;UACH;UACAkB,YAAY,CAACrB,SAAS,CAACG,QAAQ,CAAC;QACpC;MACJ;IACJ,CAAC;IAED,IAAIiB,SAAS,KAAKpB,SAAS,CAACC,OAAO,EAAE;MACjC,IAAIyB,UAAU,EAAE;QACZD,YAAY,CAAClB,cAAc,CAACC,MAAM,CAAC;QACnCa,YAAY,CAACrB,SAAS,CAACG,QAAQ,CAAC;MACpC;MACA,IAAI,CAAC2B,EAAE,EAAE;QACL,MAAMW,WAAW,GAAG1C,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC;QACrD,MAAM+B,EAAE,GAAGY,UAAU,CAAC,MAAM;UACxBrB,YAAY,CAACrB,SAAS,CAACE,OAAO,CAAC;UAC/B6B,KAAK,CAACY,SAAS,CAAC;QACpB,CAAC,EAAEF,WAAW,CAAC;QACfV,KAAK,CAACD,EAAE,CAAC;MACb;IACJ,CAAC,MAAM,IAAIV,SAAS,KAAKpB,SAAS,CAACE,OAAO,EAAE;MACxC,IAAI,CAAC4B,EAAE,EAAE;QACL,MAAMA,EAAE,GAAGc,WAAW,CAACR,QAAQ,EAAE,IAAI,CAAC;QACtCL,KAAK,CAACD,EAAE,CAAC;MACb;MACA,IAAIJ,UAAU,IAAIJ,SAAS,EAAE;QACzB,IAAKI,UAAU,KAAK,GAAG,IAAIJ,SAAS,KAAKlB,SAAS,CAACC,IAAI,IAC/CqB,UAAU,KAAK,GAAG,IAAIJ,SAAS,KAAKlB,SAAS,CAACE,KAAM,EAAE;UAC1DmB,YAAY,CAAClB,cAAc,CAACO,OAAO,CAAC;QACxC,CAAC,MAAM;UACHW,YAAY,CAAClB,cAAc,CAACK,MAAM,CAAC;QACvC;MACJ;IACJ,CAAC,MAAM,IAAIQ,SAAS,KAAKpB,SAAS,CAACG,QAAQ,EAAE;MACzC,IAAI2B,EAAE,EAAE;QACJe,YAAY,CAACf,EAAE,CAAC;QAChBC,KAAK,CAACY,SAAS,CAAC;MACpB;IACJ;EACJ,CAAC,EAAE,CAACvB,SAAS,EAAEU,EAAE,EAAEJ,UAAU,EAAEJ,SAAS,EAAEM,KAAK,EAAEJ,SAAS,CAACf,KAAK,CAAC,CAAC;EAElE,MAAMqC,YAAY,GAAIC,KAAU,IAAK;IACjC9B,OAAO,CAAC8B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BC,cAAc,CAAC,CAACH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAME,cAAc,GAAG,MAAM;IACzB9B,YAAY,CAACrB,SAAS,CAACC,OAAO,CAAC;IAC/BsB,YAAY,CAAC,EAAE,CAAC;IAChBE,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBE,aAAa,CAAC,EAAE,CAAC;IACjBE,QAAQ,CAAC,CAAC,CAAC;IACXE,KAAK,CAACY,SAAS,CAAC;IAChBS,kBAAkB,EAAE;EACxB,CAAC;EAED,MAAMA,kBAAkB,GAAG,MAAM;IAC7BC,QAAQ,CAACC,mBAAmB,CAAC,UAAU,EAAE,MAAM,CAAE,CAAC,CAAC;IACnDD,QAAQ,CAACE,gBAAgB,CAAC,UAAU,EAAEC,CAAC,IAAI;MACvC7B,aAAa,CAAC8B,CAAC,IAAID,CAAC,CAACE,GAAG,CAACC,WAAW,EAAE,CAAC;IAC3C,CAAC,CAAC;EACN,CAAC;EAED,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAIpC,SAAS,CAACf,KAAK,KAAKF,cAAc,CAACO,OAAO,CAACL,KAAK,EAAEmD,WAAW,GAAG,KAAK;EACzE,IAAIpC,SAAS,CAACf,KAAK,KAAKF,cAAc,CAACC,MAAM,CAACC,KAAK,EAAEmD,WAAW,GAAG,MAAM;EAEzE,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAEhB;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eAGnB;MAAA,wBACI,QAAC,SAAS;QAAC,EAAE,EAAC,gBAAgB;QAAC,KAAK,EAAC,MAAM;QAAC,OAAO,EAAC,UAAU;QAC1D,QAAQ,EAAEd,YAAa;QACvB,QAAQ,EAAE,IAAK;QACf,KAAK,EAAE5B,WAAY;QACnB,KAAK,EAAEF,IAAK;QACZ,QAAQ,EAAE,CAAChB,SAAS,CAACC,OAAO,EAAED,SAAS,CAACE,OAAO,CAAC,CAAC2D,QAAQ,CAACzC,SAAS;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5E,QAAC,MAAM;QAAC,OAAO,EAAC,WAAW;QACvB,SAAS,EAAC,mBAAmB;QAC7B,OAAO,EAAE+B,cAAe;QACxB,QAAQ,EAAE,CAACnD,SAAS,CAACC,OAAO,EAAED,SAAS,CAACE,OAAO,CAAC,CAAC2D,QAAQ,CAACzC,SAAS,CAAE;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5F,EAGLA,SAAS,KAAKpB,SAAS,CAACC,OAAO,iBAC5B;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM,EAExBmB,SAAS,KAAKpB,SAAS,CAACE,OAAO,IAAIoB,SAAS,iBACzC;MAAA,wBACI;QAAA,WAAK,QAAM;UAAA,UAAOM;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACrC;QAAK,SAAS,EAAG,GAAEN,SAAU,UAASsC,WAAY,EAAE;QAAA,uBAChD;UAAK,GAAG,EAAC,WAAW;UAAC,SAAS,EAAC,OAAO;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC9C;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,EAETxC,SAAS,KAAKpB,SAAS,CAACG,QAAQ,iBAC7B;MAAA,wBACI;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACrB;QAAA,UAAKqB,SAAS,CAACd;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5B;QAAA,WAAI,QAAM;UAAA,UAAOkB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACnC;QAAK,GAAG,EAAC,iBAAiB;QAAC,SAAS,EAAC,WAAW;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD;EAAA;IAAA;IAAA;IAAA;EAAA,QAGR;AAEd;AAAC,GAjJuBb,GAAG;AAAA,KAAHA,GAAG;AAiJ1B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}